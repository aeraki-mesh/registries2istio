name: Retio Release Pipeline ðŸŒŠ

on:
  create

jobs:
  style-check:
    name: "ðŸŒˆ Go Style Check"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Format Go
        run: |
           make check
  golangci-lint:
    name: "ðŸ‘€ Go CI Linter"
    needs: [style-check]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.14.15
    - name: Go Lint Test
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.46.2

  go-unit-test:
    name: "ðŸ‘€ Go Unit Test"
    needs: [style-check]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.1
    - name: Go Unit Test
      run: make test

  build-binary-darwin-amd64-artifact:
    name:  "ðŸ§³ Darwin AMD64 Artifact"
    needs: [golangci-lint,go-unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build Artifact
        run: |
          make go.build.darwin_amd64.retio
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: retio.darwin_amd64
          path: _output/darwin/amd64/retio
          retention-days: 5
          if-no-files-found: error
      - name: Compress Artifact
        run: zip retio.darwin_amd64.zip retio
        working-directory: _output/darwin/amd64
      - name: Upload Artifact to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _output/darwin/amd64/retio.darwin_amd64.zip
          tag: ${{ github.ref }}

  build-binary-darwin-arm64-artifact:
    name:  "ðŸ§³ Darwin ARM64 Artifact"
    needs: [golangci-lint,go-unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build Artifact
        run: |
          make go.build.darwin_arm64.retio
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: retio.darwin_arm64
          path: _output/darwin/arm64/retio
          retention-days: 5
          if-no-files-found: error
      - name: Compress Artifact
        run: zip retio.darwin_arm64.zip retio
        working-directory: _output/darwin/arm64
      - name: Upload Artifact to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _output/darwin/arm64/retio.darwin_arm64.zip
          tag: ${{ github.ref }}

  build-binary-linux-amd64-artifact:
    name:  "ðŸ§³ Linux AMD64 Artifact"
    needs: [golangci-lint,go-unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build Artifact
        run: |
          make go.build.linux_amd64.retio
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: retio.linux_amd64
          path: _output/linux/amd64/retio
          retention-days: 5
          if-no-files-found: error
      - name: Compress Artifact
        run: zip retio.linux_amd64.zip retio
        working-directory: _output/linux/amd64
      - name: Upload Artifact to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _output/linux/amd64/retio.linux_amd64.zip
          tag: ${{ github.ref }}

  build-binary-linux-arm64-artifact:
    name:  "ðŸ§³ Linux ARM64 Artifact"
    needs: [golangci-lint,go-unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18.1
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build Artifact
        run: |
          make go.build.linux_arm64.retio
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: retio.linux_arm64
          path: _output/linux/arm64/retio
          retention-days: 5
          if-no-files-found: error
      - name: Compress Artifact
        run: zip retio.linux_arm64.zip retio
        working-directory: _output/linux/arm64
      - name: Upload Artifact to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _output/linux/arm64/retio.linux_arm64.zip
          tag: ${{ github.ref }}

  build-push-linux-amd64-image:
    name: "ðŸŽ‰ Linux AMD64 Image"
    needs: [build-binary-linux-arm64-artifact,build-binary-linux-amd64-artifact,build-binary-darwin-amd64-artifact,build-binary-darwin-arm64-artifact]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build retio Latest Image
        run: |
          make image.build.linux_amd64.retio
      - name: Build and Push Image to DockerHub
        run: |
          make image.push.linux_amd64.retio
